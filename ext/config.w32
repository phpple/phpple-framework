ARG_ENABLE("phpple", "enable phpple", "no");

if (PHP_PHPPLE != "no") {
  EXTENSION("phpple", "phpple.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c math.c concat.c variables.c filter.c iterator.c exit.c time.c", "phpple");
  /* PCRE is always included on WIN32 */
  AC_DEFINE("ZEPHIR_USE_PHP_PCRE", 1, "Whether PHP pcre extension is present at compile time");
  if (PHP_JSON != "no") {
    ADD_EXTENSION_DEP("phpple", "json");
    AC_DEFINE("ZEPHIR_USE_PHP_JSON", 1, "Whether PHP json extension is present at compile time");
  }
  
  ADD_SOURCES(configure_module_dirname + "/phpple/filter", "filterinterface.zep.c cleanfilter.zep.c exception.zep.c executor.zep.c inputfilter.zep.c outputfilter.zep.c routefilter.zep.c", "phpple");
	ADD_SOURCES(configure_module_dirname + "/phpple", "exception.zep.c application.zep.c requestinterface.zep.c responseinterface.zep.c", "phpple");
	ADD_SOURCES(configure_module_dirname + "/phpple/log", "loggerinterface.zep.c exception.zep.c loglevel.zep.c logger.zep.c", "phpple");
	ADD_SOURCES(configure_module_dirname + "/phpple/console", "color.zep.c", "phpple");
	ADD_SOURCES(configure_module_dirname + "/phpple/helper", "requestbuilder.zep.c", "phpple");
	ADD_SOURCES(configure_module_dirname + "/phpple/http", "application.zep.c controller.zep.c exception.zep.c outputformat.zep.c request.zep.c response.zep.c", "phpple");
	ADD_SOURCES(configure_module_dirname + "/phpple/util", "conf.zep.c timer.zep.c xml.zep.c", "phpple");
  ADD_FLAG("CFLAGS_PHPPLE", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("CFLAGS", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("LDFLAGS", "/LTCG");
}
